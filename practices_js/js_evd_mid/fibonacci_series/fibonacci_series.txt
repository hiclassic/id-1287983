ЁЯФ╣ let a = 0;
let: ржирждрзБржи ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ рждрзИрж░рж┐ ржХрж░рж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ рж╣рзЯ (ES6 ржПрж░ keyword)

a = 0: Fibonacci рж╕рж┐рж░рж┐ржЬрзЗрж░ ржкрзНрж░ржержо рж╕ржВржЦрзНржпрж╛ 0 рж╣рж┐рж╕рзЗржмрзЗ рж╕рзЗржЯ ржХрж░рж╛ рж╣рж▓рзЛ

ЁЯФ╣ let b = 1;
ржжрзНржмрж┐рждрзАрзЯ рж╕ржВржЦрзНржпрж╛ 1 рж╣рж┐рж╕рзЗржмрзЗ рж╕рзЗржЯ ржХрж░рж╛ рж╣рж▓рзЛ

ржПржЦржи ржЖржорж╛ржжрзЗрж░ рж╢рзБрж░рзБ:
a = 0, b = 1 тЖТ Fibonacci рж╢рзБрж░рзБ: 0, 1

ЁЯФ╣ while (a <= 100) {
while: ржПржХржЯрж┐ рж▓рзБржк ржпрзЗржЯрж╛ рждржЦржиржЗ ржЪрж▓ржмрзЗ ржпрждржХрзНрж╖ржг a <= 100 рж╕рждрзНржп ржерж╛ржХрзЗ

a <= 100: ржпрждржХрзНрж╖ржг a ржорж╛ржи рззрзжрзж ржмрж╛ ржХржо ржерж╛ржХржмрзЗ, рждрждржХрзНрж╖ржг рж▓рзБржк ржЪрж▓ржмрзЗ

ржПрж░ ржорж╛ржирзЗ ржЖржорж░рж╛ рззрзжрзж ржкрж░рзНржпржирзНржд Fibonacci рж╕ржВржЦрзНржпрж╛ржЧрзБрж▓рзЛ ржЪрж╛ржЗ

ЁЯФ╣ console.log(a);
console.log: ржкрзНрж░рждрж┐ржЯрж┐ Fibonacci рж╕ржВржЦрзНржпрж╛ ржХржирж╕рзЛрж▓рзЗ (browser/terminal) ржжрзЗржЦрж╛рждрзЗ ржмрзНржпржмрж╣рж╛рж░ рж╣рзЯ

ржПржЦрж╛ржирзЗ рж╢рзБржзрзБ a ржжрзЗржЦрж╛ржирзЛ рж╣ржЪрзНржЫрзЗ, ржХрж╛рж░ржг ржПржЯрж┐ржЗ ржмрж░рзНрждржорж╛ржи Fibonacci рж╕ржВржЦрзНржпрж╛

ЁЯФ╣ let next = a + b;
Fibonacci ржирж┐рзЯржо ржЕржирзБрж╕рж╛рж░рзЗ ржкрж░ржмрж░рзНрждрзА рж╕ржВржЦрзНржпрж╛ = ржЖржЧрзЗрж░ ржжрзБржЗ рж╕ржВржЦрзНржпрж╛рж░ ржпрзЛржЧржлрж▓

next: ржирждрзБржи ржнрзНржпрж╛рж░рж┐рзЯрзЗржмрж▓ ржпрзЗржЯрж╛ a + b ржорж╛ржирзЗ ржмрж░рзНрждржорж╛ржи ржжрзБржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржпрзЛржЧржлрж▓ ржзрж░рзЗ рж░рж╛ржЦрзЗ

ЁЯУМ ржЙржжрж╛рж╣рж░ржг:

0 + 1 = 1

1 + 1 = 2

1 + 2 = 3

...

ЁЯФ╣ a = b;
ржПржЦржи a ржХрзЗ b ржПрж░ ржорж╛ржирзЗ ржЖржкржбрзЗржЯ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ

ржкрзВрж░рзНржмржмрж░рзНрждрзА ржжрзНржмрж┐рждрзАржпрж╝ рж╕ржВржЦрзНржпрж╛ ржПржЦржи ржмрж░рзНрждржорж╛ржи ржкрзНрж░ржержо рж╕ржВржЦрзНржпрж╛ рж╣ржмрзЗ

ЁЯФ╣ b = next;
b ржХрзЗ ржЖржкржбрзЗржЯ ржХрж░рзЗ ржкрж░ржмрж░рзНрждрзА рж╕ржВржЦрзНржпрж╛ ржмрж╛ржирж╛ржирзЛ рж╣ржЪрзНржЫрзЗ, ржпрж╛ ржЖржорж░рж╛ next ржП ржзрж░рзЗржЫрж┐рж▓рж╛ржо

ЁЯФБ рж▓рзБржкрзЗрж░ ржЪржХрзНрж░:
a	b	next	Output
0	1	1	       0
1	1	2	       1
1	2	3	       1
2	3	5	       2
3	5	8	       3
5	8	13	       5
...	...	...	...

тЬЕ ржЪрзВрзЬрж╛ржирзНржд ржЖржЙржЯржкрзБржЯ:
Copy code
0
1
1
2
3
5
8
13
21
34
55
89
(рззрзкрзк > рззрзжрзж тАФ рждрж╛ржЗ рж▓рзБржк ржерзЗржорзЗ ржпрж╛рзЯ)

ЁЯФД рж▓рзБржкрзЗрж░ ржЪржХрзНрж░ (Iteration) ржорж╛ржирзЗ ржХрзА?
ржкрзНрж░рждрж┐ржмрж╛рж░ ржпржЦржи while рж▓рзБржк ржПржХржмрж╛рж░ ржЪрж▓рзЗ, рж╕рзЗржЯрж╛ржХрзЗ ржмрж▓рзЗ ржПржХржЯрж┐ iteration ржмрж╛ ржЪржХрзНрж░ред

Fibonacci рж╕рж┐рж░рж┐ржЬрзЗ ржПржЗ рж▓рзБржк ржкрзНрж░рждрж┐ржмрж╛рж░ ржЖржЧрзЗрж░ ржжрзБржЗ рж╕ржВржЦрзНржпрж╛рж░ ржпрзЛржЧржлрж▓ ржмрзЗрж░ ржХрж░рзЗ ржирждрзБржи рж╕ржВржЦрзНржпрж╛ ржмрж╛ржирж╛рзЯред

ЁЯФД рж╕ржВржХрзНрж╖рзЗржкрзЗ ржоржирзЗ рж░рж╛ржЦрж╛рж░ ржЯрзНрж░рж┐ржХ:
ini
Copy code
next = a + b
a = b
b = next
ржПржЗ рждрж┐ржиржЯрж┐ рж▓рж╛ржЗржиржЗ Fibonacci ржЪржХрзНрж░рзЗрж░ ржоржЧржЬред

| ржЪржХрзНрж░ | a   | b   | console.log(a)              | next = a + b | ржирждрзБржи a = b | ржирждрзБржи b = next |
| ---- | --- | --- | --------------------------- | ------------ | ---------- | ------------- |
| 1    | 0   | 1   | тЬЕ **0**                     | 1            | 1          | 1             |
| 2    | 1   | 1   | тЬЕ **1**                     | 2            | 1          | 2             |
| 3    | 1   | 2   | тЬЕ **1**                     | 3            | 2          | 3             |
| 4    | 2   | 3   | тЬЕ **2**                     | 5            | 3          | 5             |
| 5    | 3   | 5   | тЬЕ **3**                     | 8            | 5          | 8             |
| 6    | 5   | 8   | тЬЕ **5**                     | 13           | 8          | 13            |
| 7    | 8   | 13  | тЬЕ **8**                     | 21           | 13         | 21            |
| 8    | 13  | 21  | тЬЕ **13**                    | 34           | 21         | 34            |
| 9    | 21  | 34  | тЬЕ **21**                    | 55           | 34         | 55            |
| 10   | 34  | 55  | тЬЕ **34**                    | 89           | 55         | 89            |
| 11   | 55  | 89  | тЬЕ **55**                    | 144          | 89         | 144           |
| 12   | 89  | 144 | тЬЕ **89**                    | 233          | 144        | 233           |
| 13   | 144 | 233 | ЁЯЪл ржерзЗржорзЗ ржпрж╛ржмрзЗ ржХрж╛рж░ржг `a > 100` |              |            |               |


ЁЯОп ржмрзНржпрж╛ржЦрзНржпрж╛:
ржкрзНрж░рждрж┐ржЯрж┐ ржЪржХрзНрж░рзЗ ржирж┐ржЪрзЗрж░ ржХрж╛ржЬржЧрзБрж▓рзЛ ржШржЯрзЗ:

console.log(a) тЖТ ржмрж░рзНрждржорж╛ржи рж╕ржВржЦрзНржпрж╛ржЯрж┐ ржжрзЗржЦрж╛рзЯ (ржпрзЗржЯрж╛ a)

next = a + b тЖТ ржирждрзБржи Fibonacci рж╕ржВржЦрзНржпрж╛ ржмрзЗрж░ ржХрж░рзЗ

a = b тЖТ ржкрзБрж░ржирзЛ b ржПржЦржи ржирждрзБржи a

b = next тЖТ next ржорж╛ржи ржирждрзБржи b рж╣рзЯ

ржЖржмрж╛рж░ рж╢рзБрж░рзБ рж╣рзЯ ржкрж░ржмрж░рзНрждрзА ржЪржХрзНрж░

ржПржЗржнрж╛ржмрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржкрж░ржмрж░рзНрждрзА рж╕ржВржЦрзНржпрж╛ рждрзИрж░рж┐ рж╣рзЯ ржЖржЧрзЗрж░ ржжрзБржЗ рж╕ржВржЦрзНржпрж╛рж░ ржпрзЛржЧржлрж▓ ржерзЗржХрзЗред

ЁЯза ржПржХржЯрж╛ ржЪржХрзНрж░ ржЪрж┐рждрзНрж░рзЗ (ржзрж░рж╛ ржпрж╛ржХ a = 5, b = 8):
makefile
Copy code
[a = 5] + [b = 8] = [next = 13]

ржПржЦржи:
a = b тЖТ a = 8
b = next тЖТ b = 13
ЁЯФЪ ржХржЦржи ржерж╛ржорзЗ?
рж▓рзБржк рж╢рж░рзНржд: a <= 100

ржпрждржХрзНрж╖ржг ржкрж░рзНржпржирзНржд a ржПрж░ ржорж╛ржи рззрзжрзж ржмрж╛ рждрж╛рж░ ржХржо, рждрждржХрзНрж╖ржг рж▓рзБржк ржЪрж▓ржмрзЗ

ржпрзЗржЗ ржорзБрж╣рзВрж░рзНрждрзЗ a = 144, рждржЦржи a > 100 тЖТ рж▓рзБржк ржмржирзНржз рж╣рзЯрзЗ ржпрж╛ржмрзЗ

тЬЕ ржЖржЙржЯржкрзБржЯ:
Copy code
0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@2




 тАЬFibonacci рж╕рж┐рж░рж┐ржЬ 0 ржПржмржВ 1 ржжрж┐рзЯрзЗ рж╢рзБрж░рзБ ржХрж░рж╛ рж╣рзЯ ржХрзЗржи?тАЭ
ржЪрж▓рзЛ ржПржХрзЗ ржПржХрзЗ ржХрж╛рж░ржг ржПржмржВ ржкрзЗржЫржирзЗрж░ ржзрж╛рж░ржгрж╛ржЯрж┐ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рж┐ред

тЬЕ рж╕ржВржЬрзНржЮрж╛: Fibonacci рж╕рж┐рж░рж┐ржЬ ржХрзА?
Fibonacci рж╕рж┐рж░рж┐ржЬ рж╣рж▓ ржПржХржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХрждрж╛ (sequence), ржпрзЗржЦрж╛ржирзЗ:
F(n)=F(nтИТ1)+F(nтИТ2)
ржЕрж░рзНржерж╛рзО,
ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржВржЦрзНржпрж╛ржЗ ржЖржЧрзЗрж░ ржжрзБржЗржЯрж┐ рж╕ржВржЦрзНржпрж╛рж░ ржпрзЛржЧржлрж▓ред

ЁЯФН рждрж╛рж╣рж▓рзЗ 0 ржПржмржВ 1 ржХрзЗржи?
Fibonacci рж╕рж┐рж░рж┐ржЬрзЗрж░ рж╢рзБрж░рзБрждрзЗ 0 ржПржмржВ 1 ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ ржХрж╛рж░ржг:

1я╕ПтГг ржЧрж╛ржгрж┐рждрж┐ржХ ржнрж┐рждрзНрждрж┐ (Mathematical Base Case)
Fibonacci рж╕рж┐рж░рж┐ржЬ recursive ржкржжрзНржзрждрж┐рждрзЗ рж╕ржВржЬрзНржЮрж╛рзЯрж┐ржд рж╣рзЯ:


тАЛ
  
F(0)=0
F(1)=1
F(n)=F(nтИТ1)+F(nтИТ2),for┬аnтЙе2
тАЛ
 
ржПржЗржнрж╛ржмрзЗ F(0) ржПржмржВ F(1) рж╣рж▓ "base cases", ржпрж╛ ржирж╛ ржерж╛ржХрж▓рзЗ рж╕рж┐рж░рж┐ржЬ ржЧржарж┐рждржЗ рж╣рждрзЗ ржкрж╛рж░рзЗ ржирж╛ред
ржПрж░рж╛ ржЫрж╛рзЬрж╛ F(2) ржерзЗржХрзЗ рж╢рзБрж░рзБ ржХрж░рж▓рзЗржЗ рж╕ржорж╕рзНржпрж╛ рж╣рждрзЛ ржХрж╛рж░ржг F(2) ржПрж░ ржЬржирзНржп F(1) ржУ F(0) ржжрж░ржХрж╛рж░ред

2я╕ПтГг ржкрзНрж░рж╛ржХрзГрждрж┐ржХ ржЙржжрж╛рж╣рж░ржгрзЗ ржПржЯрж╛ржЗ ржорж╛ржирж╛ржирж╕ржЗ (Nature & Modeling)
Fibonacci рж╕рж┐рж░рж┐ржЬрзЗрж░ ржПржХржЯрж┐ ржРрждрж┐рж╣рж╛рж╕рж┐ржХ ржмрзНржпрж╛ржЦрзНржпрж╛ ржЖржЫрзЗ ЁЯРЗ ржЦрж░ржЧрзЛрж╢рзЗрж░ ржмржВрж╢ржмрж┐рж╕рзНрждрж╛рж░ ржоржбрзЗрж▓ (Rabbit Reproduction Model) тАУ
рж╕рзЗржЦрж╛ржирзЗ:

ржкрзНрж░ржержо ржорж╛рж╕рзЗ тЖТ 0 ржкрзНрж░ржЬржиржиржХрж╛рж░рзА ржЬрзЛрзЬрж╛ (рждрж╛рж░рж╛ ржкрзНрж░рж╕рзНрждрзБрждрж┐ ржирж┐ржЪрзНржЫрзЗ)

ржжрзНржмрж┐рждрзАрзЯ ржорж╛рж╕рзЗ тЖТ 1 ржЬрзЛрзЬрж╛

рждрж╛рж░ржкрж░ тЖТ ржкрзНрж░рждрж┐ржЯрж┐ ржкрзБрж░ржирзЛ ржЬрзЛрзЬрж╛ ржирждрзБржи ржЬрзЛрзЬрж╛ рждрзИрж░рж┐ ржХрж░рзЗ

ржПржЗ рж╣рж┐рж╕рзЗржмрзЗржУ рж╢рзБрж░рзБ рж╣рзЯ 0, 1 ржжрж┐рзЯрзЗред

3я╕ПтГг Consistency in Programming
ржпржЦржи ржЖржорж░рж╛ ржкрзНрж░рзЛржЧрзНрж░рж╛ржорж┐ржВрзЯрзЗ рж╕рж┐рж░рж┐ржЬ рждрзИрж░рж┐ ржХрж░рж┐, рждржЦржи:

ржЖржорж░рж╛ ржЪрж╛ржЗ index тЖТ value ржПрж░ map ржерж╛ржХрзБржХ

ржпрзЗржоржи:
F(0) = 0
F(1) = 1
F(2) = 1
F(3) = 2
...

рждрж╛рж╣рж▓рзЗ ржЖржорж╛ржжрзЗрж░ Array: [0, 1, 1, 2, 3, 5, ...]

ржпрзЗржЦрж╛ржирзЗ index ржзрж░рж▓рзЗ рж╕рж╣ржЬ рж╣рзЯ:

javascript
Copy code
fib[3] = fib[2] + fib[1] = 1 + 1 = 2
ЁЯУМ ржпржжрж┐ 1, 1 ржжрж┐рзЯрзЗ рж╢рзБрж░рзБ ржХрж░рждрж╛ржо?
ржЕржирзЗржХрзЗ Fibonacci рж╕рж┐рж░рж┐ржЬ рж╢рзБрж░рзБ ржХрж░рзЗ 1, 1, 2, 3, ... ржжрж┐рзЯрзЗред
ржПржЯрж╛ржХрзЗ ржмрж▓рзЗ modified Fibonacci (ржмрж╛ ржХржЦржирзЛ Lucas series)ред

ржХрж┐ржирзНрждрзБ ржПржЯрж┐ ржЧрж╛ржгрж┐рждрж┐ржХ ржжрзГрж╖рзНржЯрж┐ржХрзЛржг ржерзЗржХрзЗ ржЖржжрж░рзНрж╢ ржирзЯ ржХрж╛рж░ржг:

рждржЦржи F(0) = 1 тЖТ recursive рж╕ржВржЬрзНржЮрж╛ ржнрзЗржЩрзЗ ржпрж╛рзЯ

F(n) = F(n-1) + F(n-2) рждржмрзБ ржарж┐ржХ ржерж╛ржХрзЗ, ржХрж┐ржирзНрждрзБ ржнрж┐рждрзНрждрж┐ (base cases) рж╣ржмрзЗ ржЕржирзНржп

тЬЕ ржЙржкрж╕ржВрж╣рж╛рж░:
ржмрж┐рж╖рзЯ	ржорж╛ржи
рж╢рзБрж░рзБ ржХрж░рж╛рж░ ржорж╛ржи	0 ржПржмржВ 1
ржХрзЗржи?	ржЧрж╛ржгрж┐рждрж┐ржХ ржнрж┐рждрзНрждрж┐ ржУ ржкрзНрж░рж╛ржХрзГрждрж┐ржХ ржоржбрзЗрж▓ ржЕржирзБрж╕рж╛рж░рзЗ
ржирж╛ ржХрж░рж▓рзЗ ржХрзА рж╣ржмрзЗ?	рж╕рж┐рж░рж┐ржЬ ржЕрж╕ржорзНржкрзВрж░рзНржг, recursive рж╕ржВржЬрзНржЮрж╛ ржнрзЗржЩрзЗ ржпрж╛рзЯ

ЁЯза ржоржирзЗ рж░рж╛ржЦрж╛рж░ рж╕рж╣ржЬ рж╕рзВрждрзНрж░:
"Fibonacci is the future built from the past тАФ and past starts at zero."

